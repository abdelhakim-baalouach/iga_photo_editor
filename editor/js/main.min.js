$(function(){
  const canvas = document.querySelector('#canvasEditor')
  const ctx = canvas.getContext('2d')

  const canvas1 = document.querySelector('#origine')
  const ctx1 = canvas1.getContext('2d')

  const video = document.querySelector('#video')

  $('.slider').on('input change', function(){
    $(this).next($('.slider_label')).html(this.value);
  });
  $('.slider_label').each(function(){
    const value = $(this).prev().attr('value');
    $(this).html(value);
  });

  function activeCamera() {
    navigator.mediaDevices.getUserMedia({video: true}).then(function(stream){
      video.srcObject = stream
    })
  }
  $( "#camera" ).on( "click", activeCamera );  

  function desactiveCamera() {
    let stream = video.srcObject;
    let tracks = stream.getTracks();

    tracks.forEach(function(track) {
      track.stop();
    });

    video.srcObject = null;
  }
  $( "#close,#close1" ).on( "click", desactiveCamera );

  function prendPhoto(e) {
    ctx1.clearRect(0, 0, canvas1.width, canvas1.height)
    ctx.clearRect(0, 0, canvas.width, canvas.height)

    ctx.drawImage(video, video.width, video.height)
    ctx1.drawImage(video, video.width, video.height)
    $("#cropper").attr("src", canvas.toDataURL("image/jpeg"))
    desactiveCamera()
  }
  $( "#copie" ).on( "click", prendPhoto );

  function uploadImage(e){
    ctx.clearRect(0, 0, canvas.width, canvas.height)
    ctx1.clearRect(0, 0, canvas1.width, canvas1.height)

    const reader = new FileReader();
    reader.onload = function(event){
        const imgNew = new Image();
        imgNew.onload = function(){
          canvas.width = imgNew.width;
          canvas.height = imgNew.height;
          ctx.drawImage(imgNew,0,0);

          canvas1.width = imgNew.width;
          canvas1.height = imgNew.height;
          ctx1.drawImage(imgNew,0,0);
          $("#cropper").attr("src", canvas.toDataURL("image/jpeg"))
        }
        imgNew.src = event.target.result;
    }
    reader.readAsDataURL(e.target.files[0]);  
  }
  $( "#imageUpload" ).on('change', uploadImage);

  // returns true if all color channels in each pixel are 0 (or "blank")
  function isCanvasBlank() {
    return !ctx
      .getImageData(0, 0, canvas.width, canvas.height).data
      .some(channel => channel !== 0);
  }
  const filterControls = document.querySelectorAll('input[type=range]');
  function applyFilter(){
    const dataUrl = canvas.toDataURL("image/jpeg")
    if (!isCanvasBlank()) {
      const img = new Image()
      img.src = dataUrl
      var allFiltre = ""
      img.onload = function() {
        ctx1.save()
        filterControls.forEach(function(item, index) {
          allFiltre += item.getAttribute('data-filter') + '(' + item.value + item.getAttribute('data-scale') + ') ';
        });
        ctx1.filter = allFiltre
        ctx1.drawImage(img, 0, 0)
        ctx1.restore()
      }
    }else {
      Swal.fire({
        position: 'top-end',
        type: 'info',
        title: 'Choisir une image ..',
        showConfirmButton: false,
        timer: 1500
      })
    }
  }
  $( "input[type=range]" ).on('change', applyFilter);
  var cropper
  var image = $('#cropper')
  var json 
  function cropperImage(e){
    if (!isCanvasBlank()) {

      var minAspectRatio = 0.5;
      var maxAspectRatio = 1.5;

      cropper = image.cropper({
        viewMode: 1,
        responsive: true,
        background: false,
        zoomable: false,
        minCropBoxWidth: 80,
        minCropBoxHeight: 80,
        minContainerWidth: 350,
        minContainerHeight: 200,
        minCanvasWidth: 350,
        minCanvasHeight: 200,
        ready: function (event) {
          // Zoom the image to its natural size
          image.cropper("zoomTo");
        },

        crop: function (event) {
          json = JSON.stringify(image.cropper("getData"))
          json =JSON.parse(json)
        },

        zoom: function (event) {
          // Keep the image in its natural size
          if (event.detail.oldRatio === 1) {
            event.preventDefault();
          }
        },
      });

    }else {
      Swal.fire({
        position: 'top-end',
        type: 'info',
        title: 'Choisir une image ..',
        showConfirmButton: false,
        timer: 1500
      })
    }
  }
  $( "#crop" ).on('click', cropperImage);

  function cropper_image(){
    const img = new Image()
    img.src = image.prop('src')
    img.onload = function() {
      ctx.save()
      canvas.width = json.width
      canvas.height= json.height
      ctx.drawImage(img, json.x, json.y, json.width, json.height, 0, 0, json.width, json.height)
      ctx.restore()

      ctx1.save()
      canvas1.width = json.width
      canvas1.height= json.height
      ctx1.drawImage(img, json.x, json.y, json.width, json.height, 0, 0, json.width, json.height)
      ctx1.restore()
    }
  }
  $("#cropper-image").on('click', cropper_image);

  function savee() {
    var download = document.getElementById("download");
    var image = canvas1.toDataURL("image/png")
    .replace("image/png", "image/octet-stream");
    download.setAttribute("href", image);
  }
  $( "#download" ).on('click', savee);

  function reset() {
    applyFilter()
  }
  $( "#reset" ).on('click', reset);


  $('.menu-mobile').click(function(){
    $('.bg-nav').slideToggle();
  })

  $(window).resize(function(){
    if($(window).width() >= 768){
      $('.bg-nav').slideDown();
    }
  })
  
})